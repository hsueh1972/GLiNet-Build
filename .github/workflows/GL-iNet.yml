name: Build OpenWrt

on:
  watch:
    types: started
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  #REPO_URL: https://github.com/monw/gl-infra-builder ##可以改成自己的仓库
  REPO_URL: https://github.com/gl-inet/gl-infra-builder.git
  REPO_BRANCH: main
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo apt install -y build-essential libncurses5-dev gawk git libssl-dev gettext zlib1g-dev swig unzip time rsync python3 python3-setuptools python3-yaml
        sudo timedatectl set-timezone "$TZ"
        git config --global user.email "hsueh1972@gmail.com"  ##修改成自己的GitHub注册邮箱地址
        git config --global user.name "hsueh1972" ##修改成自己的GitHub用户名。

    - name: Clone source code and building rom
      run: |
        df -hT $PWD
        #git clone $REPO_URL -b $REPO_BRANCH
        git clone $REPO_URL
        cd gl-infra-builder        
        #python3 setup.py -c config-wlan-ap.yml
        #cd wlan-ap/openwrt
        python3 setup.py -c config-18.x.yml
        cd openwrt-18.06
        svn checkout https://github.com/coolsnowwolf/lede/trunk/tools/ucl tools/ucl
        svn checkout https://github.com/coolsnowwolf/lede/trunk/tools/upx tools/upx
        sed -i '/tools-y += patchelf pkgconf quilt squashfskit4 sstrip zip zlib zstd/a tools-y += ucl upx' tools/Makefile
        sed -i '/$(curdir)\/bison\/compile := $(curdir)\/flex\/compile/a $(curdir)\/upx\/compile := $(curdir)\/ucl\/compile' tools/Makefile        
        #sed -i '$a src-git liuran001_packages https://github.com/liuran001/openwrt-packages' feeds.conf.default ##添加liuran001源
        sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default ##添加kenzok8源，与上条源只选一种
        sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default ##添加kenzok8源
        sed -i '/DISTRIB_REVISION/d' package/base-files/files/etc/openwrt_release
        echo "DISTRIB_REVISION='R22.3.15'" >> package/base-files/files/etc/openwrt_release
        sed -i '/DISTRIB_DESCRIPTION/d' package/base-files/files/etc/openwrt_release
        echo "DISTRIB_DESCRIPTION='OpenWrt-21.02 '" >> package/base-files/files/etc/openwrt_release
        sed -i 's/192.168.1.1/192.168.8.1/' package/base-files/files/bin/config_generate
        cd package
        git clone https://github.com/jerrykuku/luci-theme-argon.git
        cd ..
        #./scripts/gen_config.py target_wlan_ap-gl-ax1800 luci-ssr
        ./scripts/gen_config.py target_siflower_gl-sf1200 luci-ssr
        echo -e "$(nproc) thread compile" ##action一般是二线程，所以比较慢些
        make -j$(nproc) || make -j1 || make -j1 V=s
        
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        #cd gl-infra-builder/wlan-ap/openwrt/bin/targets/*/*
        cd gl-infra-builder/openwrt-18.06/siflower/openwrt-18.06/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
    
    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"
        
    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "🔗 [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "🔗 [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

